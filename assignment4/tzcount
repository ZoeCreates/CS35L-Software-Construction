#!/usr/bin/env python3
import subprocess
import sys
from collections import defaultdict

def get_commits_time_zones(revision_range):
    # Command to get commit dates and their time zones
    command = ["git", "log", "--pretty=format:%cd", "--date=format-local:%z", revision_range]
    result = subprocess.run(command, capture_output=True, text=True)
    if result.returncode != 0:
        print(f"Error executing git log: {result.stderr}", file=sys.stderr)
        sys.exit(1)
    return result.stdout.splitlines()

def count_time_zones(time_zones):
    tz_counts = defaultdict(int)
    for tz in time_zones:
        tz_counts[tz] += 1
    return tz_counts

def main():
    if len(sys.argv) < 2:
        print("Usage: ./tzcount <revision-range>", file=sys.stderr)
        sys.exit(1)
    
    revision_range = sys.argv[1]
    time_zones = get_commits_time_zones(revision_range)
    tz_counts = count_time_zones(time_zones)

    # Sort by time zone and print counts
    for tz, count in sorted(tz_counts.items(), key=lambda item: item[0]):
        print(f"{tz} {count}")

if __name__ == "__main__":
    main()
